(defwidget bar []
    (box 
        :class "bar"
        :orientation "h"
        (left_container)
        (center_container)
        (right_container)
    )
)

(defwidget right_container []
    (box
        :class "right-container"
        :space-evenly false
        :halign "end"
        (weather)
        (time)
        (battery)
    )
)

(defwidget center_container []
  (box
    :class "center-container"
      :space-evenly false
      :halign "center"
      (window_w)
  )
)

(defwidget left_container [] 
  (box
    :class "left-container"
    :space-evenly false
    (power)
    (workspaces)
    (hardware)
  )
)

;; Utils

(defwidget metric [label value onchange]
    (box 
        :orientation "h"
        :class "metric"
        :space-evenly false
        (box :class "label" label)
        (scale 
            :min 0
            :max 101
            :active {onchange != ""}
            :value value
            :onchange onchange
        )
    )
)

;; Left container items

(defwidget power []
  (eventbox
    :onclick "$HOME/.config/rofi/powermenu/type-1/powermenu.sh"
    :class "power-event"
    (box
      :class "power"
      (label :text "⏻")
    )
  )
)

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get_workspaces.sh")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get_active_workspace.sh")
(defwidget workspaces []
    (eventbox 
        :onscroll "bash ~/.config/eww/scripts/change_active_workspace.sh {} ${current_workspace}" 
        :class "workspaces"
        (box 
            :class "workspaces-container"
            :space-evenly true
            (label 
                :text "${workspaces}${current_workspace}" 
                :visible false)
            (for workspace in workspaces
                (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
                    (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
                        (label :text "${workspace.id}")
                    )
                )
            )
        )
    )
)

(defwidget hardware []
  (eventbox
    :class "hardware-event"
    (box
      :class "hardware"
      (cpu)
      (ram)
    )
  )
)

(defwidget cpu []
  (eventbox
    :class "cpu-event"
    (box
      :class "cpu"
      (label
        :class "cpu-label"
        :text " "
      )
      {round(EWW_CPU["avg"], 1)}
      (label
        :text "GHz"
      )
    )
  )
)

(defwidget ram []
  (eventbox
    :class "ram-event"
    (box
      :class "ram"
      (label
        :class "ram-label"
        :text "󰧑 "
      )
      {round(EWW_RAM["used_mem_perc"], 1)}"%"
    )
  )
)

;; Center container items

(deflisten window :initial "..." "sh ~/.config/eww/scripts/get_window_title.sh")
(defwidget window_w []
  (eventbox
    :class "window_w-event"
    (box
      :class "window_w"
      (label 
        :text "${window}"
        :limit-width 60
      )
    )
  )
)

(defwidget hyprland []
  (eventbox
    (image
     :class "hypr-logo"
     :path "./images/icon.ico"
     :image-width 20
     :image-height 20
    )
  )
)

;; Right container items

(defpoll show_temp
  :interval "30s"
  "$HOME/.config/eww/scripts/weather/get_temp.sh"
)

(defpoll show_icon
  :interval "30s"
  "$HOME/.config/eww/scripts/weather/get_icon.sh"
)

(defwidget weather []
  (eventbox
    :class "weather-event"
    (box
      :class "weather"
      show_temp
      (image 
        :path show_icon
        :image-height 20
        :image-width 20
      )
    )
  )
)

(defpoll show_time 
    :interval "10s"
    :class "time"
    "date '+%I:%M %b %d, %Y'"
)

(defwidget time []
  (eventbox
    :class "time-event"
    (box
     :space-evenly false
     :halign "center"
     :class "time"
     show_time
    )
  )
)

(defpoll battery_remaining 
    :class "battery_remaining"
    :interval "10s"
    "acpi -b | awk -F ', ' '{print$2}' | awk -F '%' '{print$1}'"
)

(defpoll battery_charging
    :interval "3s"
    "./scripts/battery/is_charging.sh"
)

(defpoll battery_low
    :interval "3s"
    "./scripts/battery/is_low.sh"
)

(defwidget battery []
  (eventbox
    :onclick "$HOME/.config/rofi/applets/bin/battery.sh" 
    :class "battery-event"
    (box
      :class {
        battery_charging == "true" ? "battery charging" : 
        battery_low == "true" ? "battery low" : 
        "battery"
      }
      (metric 
        :orientation "horizontal"
        :halign "center"
        :label {
          battery_remaining < 20 ? " " :
          battery_remaining < 40 ? " " : 
          battery_remaining < 60 ? " " :
          battery_remaining < 80 ? " " : 
          " " 
          ;; Should fix this:
          ;; "$HOME/.config/eww/scripts/battery/get_level.sh" == 0 ? " " :
          ;; "$HOME/.config/eww/scripts/battery/get_level.sh" == 1 ? " " :
          ;; "$HOME/.config/eww/scripts/battery/get_level.sh" == 2 ? " " :
          ;; "$HOME/.config/eww/scripts/battery/get_level.sh" == 3 ? " " :
          ;; " " 
        }
        :value 100
        :onchange "acpi -b"
      )
    )
  )
)

;; Windows

(defwindow bar
    :monitor 0
    :windowtype "dock"
    :geometry (geometry 
        :x "0%"
        :y "0%"
        :width "100%"
        :height "2%"
        :anchor "top center"
    )
    :stacking "bg"
    :exclusive true
    (bar)
)
